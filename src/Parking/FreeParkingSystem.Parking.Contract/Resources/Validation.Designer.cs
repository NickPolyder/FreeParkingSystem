//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FreeParkingSystem.Parking.Contract.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Validation {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Validation() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FreeParkingSystem.Parking.Contract.Resources.Validation", typeof(Validation).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot Add parking site when using SiteRequestId..
        /// </summary>
        public static string ParkingSite_CannotUseAddWIthId {
            get {
                return ResourceManager.GetString("ParkingSite_CannotUseAddWIthId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot Delete parking site. SiteRequestId is required.
        /// </summary>
        public static string ParkingSite_CannotUseDeleteWithNoId {
            get {
                return ResourceManager.GetString("ParkingSite_CannotUseDeleteWithNoId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parking site cannot be updated. SiteRequestId is required.
        /// </summary>
        public static string ParkingSite_CannotUseUpdateWithNoId {
            get {
                return ResourceManager.GetString("ParkingSite_CannotUseUpdateWithNoId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parking site you requested does not exist..
        /// </summary>
        public static string ParkingSite_DoesNotExist {
            get {
                return ResourceManager.GetString("ParkingSite_DoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This parking site has active orders and cannot be deleted..
        /// </summary>
        public static string ParkingSite_HasActiveOrder {
            get {
                return ResourceManager.GetString("ParkingSite_HasActiveOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to change the details of this parking site you must be the owner of the parking..
        /// </summary>
        public static string ParkingSite_IsNotTheOwner {
            get {
                return ResourceManager.GetString("ParkingSite_IsNotTheOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parking site name already exists..
        /// </summary>
        public static string ParkingSite_NameAlreadyExists {
            get {
                return ResourceManager.GetString("ParkingSite_NameAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parking site name cannot be empty.
        /// </summary>
        public static string ParkingSite_NameCannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("ParkingSite_NameCannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parking type selected does not exist..
        /// </summary>
        public static string ParkingSite_TypeDoesNotExist {
            get {
                return ResourceManager.GetString("ParkingSite_TypeDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parking spot already exists..
        /// </summary>
        public static string ParkingSpot_AlreadyExists {
            get {
                return ResourceManager.GetString("ParkingSpot_AlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot Add parking spot when using SpotRequestId..
        /// </summary>
        public static string ParkingSpot_CannotUseAddWIthId {
            get {
                return ResourceManager.GetString("ParkingSpot_CannotUseAddWIthId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot Delete parking spot. SpotRequestId is required.
        /// </summary>
        public static string ParkingSpot_CannotUseDeleteWithNoId {
            get {
                return ResourceManager.GetString("ParkingSpot_CannotUseDeleteWithNoId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parking spot cannot be updated. SpotRequestId is required.
        /// </summary>
        public static string ParkingSpot_CannotUseUpdateWithNoId {
            get {
                return ResourceManager.GetString("ParkingSpot_CannotUseUpdateWithNoId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parking spot you requested does not exist..
        /// </summary>
        public static string ParkingSpot_DoesNotExist {
            get {
                return ResourceManager.GetString("ParkingSpot_DoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This parking spot has active orders and cannot be deleted..
        /// </summary>
        public static string ParkingSpot_HasActiveOrder {
            get {
                return ResourceManager.GetString("ParkingSpot_HasActiveOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to change the details of this parking spot you must be the owner of the parking..
        /// </summary>
        public static string ParkingSpot_IsNotTheOwner {
            get {
                return ResourceManager.GetString("ParkingSpot_IsNotTheOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parking site id included in the parking spot does not exist..
        /// </summary>
        public static string ParkingSpot_ParkingSiteDoesNotExist {
            get {
                return ResourceManager.GetString("ParkingSpot_ParkingSiteDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parking site id included in the parking spot is not valid..
        /// </summary>
        public static string ParkingSpot_ParkingSiteIsNotValid {
            get {
                return ResourceManager.GetString("ParkingSpot_ParkingSiteIsNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parking spot type selected does not exist..
        /// </summary>
        public static string ParkingSpot_TypeDoesNotExist {
            get {
                return ResourceManager.GetString("ParkingSpot_TypeDoesNotExist", resourceCulture);
            }
        }
    }
}
